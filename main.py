# Игра Морской бой. Автор Горюнов Евгений


# ВНУТРЕННЯЯ ЛОГИКА

# Классы исключений, которые будет использовать наша программа:
# 1 - BoardOutException (ДоскаВнеИсключение), когда игрок выстреливает за пределы поля
# 2 - когда игрок пытается сходить в тоже место, куда ходил ранее, либо по уже подбитому кораблю
# 3 - когда игрок пытается сходить второй раз подряд, после промаха (ход компа должен быть)
# 4 - расположение кораблей 1, чтоб при расположении корабль не вышел за границы поля
# 5 - расположение кораблей 2, если корабль ставится близко к другому кораблю (в соседнюю клетку),
# хотя разрешено через клетку
# 6 - когда игрок попал по кораблю противника, вылетает исключение, и дается повторный ход

class BoardOutException:
    pass


# Класс Dot (точка) - класс точек на поле, которые описываются параметрами: координатами по оси Х и У
# Отдельный тип данных для точек на поле, использовать для удобства метод __eq__ для проверки
# точек на равенство
# Чтобы проверить, находится ли точка в списке, использовать оператор in

class Dot:
    pass


# Класс Ship (корабль) - расположение корабля на игровом поле описывает данный класс
# Расположение корабля на поле описывается 4-мя параметрами:
# 1 - длина корабля (1, 2 или 3 клетки)
# 2 - точка, где размещен нос корабля
# 3 - направление корабля (вертикальное - сверху вниз, горизонтальное - слева направо)
# Использовать метод Dot, который возвращает список всех точек корабля

class Ship:
    pass


# Board (игровая доска) - игровая доска описывается данным классом
# Доска описывается следующими параметрами:
# Двумерный список, в котором хранятся состояния каждой из клеток
# Список расположения кораблей на доске
# Параметр hid типа bool - инфа о том, скрывать или нет корабли на доске, для компа - скрывать, для нас - нет
# Кол-ов живых кораблей
# Данный класс имеет следующие методы:
# 1 - add_ship (добавить_корабль) - ставит корабли на поле (если вне поля,
# либо близко друг к другу корабли, выбрасываем исключение)
# 2 - contour (контур) - обводит корабли по контуру, когда подбиваем, либо подбили корабль противника,
# а также, когда расставляем корабли в начале игры
# 3 - метод, который выводит доску в консоль в зависимости от параметра hid (видимость нашей доски и противника)
# 4 - out (из, за пределы) - метод, который выдает True, если точка выходит за пределы поля, и False,
# если нет. Объект класса Dot (точка)
# 5 - shot (выстрел) - при помощи данного метода производитс выстрел по доске, еслди выстрел за
# пределы доски, то выбрасываем исключение

class Board:
    pass


# ВНЕШНЯЯ ЛОГИКА (для игрока)

# Класс Player (игрок) - класс игрока и компа. Данный класс будет являться родительским классом
# для двух других классов: User (пользователь, то есть мы) и AI (альтернативный интеллект, то есть комп)
# Класс Player (игрок) имеет следующие методы:
# ask (спрашивать)  -  метод, который запрашивает от пользователя координаты выстрела.
# move (движение) - метод, который делает ход в игре. При вызове вызывается метод ask и
# делаем выстел по вражине (метод Board.shot (доска.выстрел)), проверяем на исключения, если они есть,
# далаем повторный ход.
# В дочерних классах переопределяем метод ask: для класса AI (компа) - это рамдомный выстрел,
# для User (пользователя, то есть для нас) - спрашиваем координаты хода (х и у, через пробел, как в игре Х-0)

class Player:
    pass


class AI:
    pass


# Класс Game (игра) - главный класс игры
# Параметры класса:
# 1 - игрок-пользователь, объект класса User
# 2 - доска пользователя
# 3 - игрок-компьтер, объект класс AI
# 4 - доска компа
# Методы класса:
# 1 - random_board (случайная доска) - метод создает пустую доску, на которую мы размещаем корабли
# (используем для этого бесконечный цикл (while)), пока все корабли не будут выставлены. Начать
# расстановку кораблей с длинных. Если спустя много попыток корабли установить не получилось,
# создаем новую доску
# 2 - greet (приветствие) - самый первый метод, который тупо приветсвует игрока и рассказывает
# правила игры, способы установки кораблей, методы ввода координат и т.д.
# 3 - loop (петля) - метод с игровым циклом, тут мы последовательно вызываем метод mode для игроков
# и делаем проверку на подбитые корабли, чтоб определить победу
# 4 - start (старт) - запуск игры, сначала вызываем метод greet, затем loop

# Для начала игры нужно создать экземпляр класс Game и вызвать метод start, в общем, всё просто как всегда))

class Game:
    pass

